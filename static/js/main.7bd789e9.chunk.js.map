{"version":3,"sources":["redux/constants.ts","redux/content.ts","utils/constants.ts","redux/identity.ts","redux/firebase.ts","redux/modal.ts","utils/fixedValues.ts","redux/practice.ts","redux/signup.ts","redux/reducer.ts","redux/store.ts","components/Loading.tsx","components/AuthenticationBoundary.tsx","design/fixedValues.ts","design/theme/index.ts","design/components/YuiTitle.ts","design/components/Navbar.ts","design/components/containers.ts","design/components/Tag.ts","components/DefaultLayout/NavigationBar.tsx","design/components/Modal.ts","design/components/buttons.tsx","components/Modal.tsx","design/components/MenuOpener.ts","components/CircleProgress.tsx","components/DefaultLayout/practice/PracticeResult.tsx","components/DefaultLayout/practice/PracticeModal.tsx","design/components/InfoLine.tsx","components/DefaultLayout/practice/PracticeSection.tsx","components/DefaultLayout/vocabulary/ChooseLanguage.tsx","components/DefaultLayout/vocabulary/EnterPhrase.tsx","design/components/Overlay.ts","components/DefaultLayout/vocabulary/VocabularySection.tsx","utils/tools.ts","components/DefaultLayout/NavigationsBoundary.tsx","components/DefaultLayout/Dashboard.tsx","pages/DefaultLayout.tsx","design/components/Input.tsx","pages/LogInPage.tsx","pages/SignUpPage.tsx","pages/ErrorPage.tsx","index.tsx"],"names":["SIGNUP_REQUESTED","SIGNUP_SUCCESSFUL","SIGNUP_FAILED","IDENTITY_IDLE","IDENTITY_REQUESTED","IDENTITY_RECEIVED","IDENTITY_FAILED","CONTENT_REQUESTED","CONTENT_RECEIVED","CONTENT_FAILED","REQUEST_INITIALISED","REQUEST_SUCCESSFUL","REQUEST_FAILED","ATTEMPT_IN_PROGRESS","EXERCISE_CREATED","EXERCISE_FAILED","PRACTICE_SUCCESSFUL","PRACTICE_FAILED","PRACTICE_IDLE","initialState","userContent","contentStatus","failedContent","type","getUserData","uid","dispatch","a","fetch","method","body","JSON","stringify","response","status","json","result","payload","Error","PRACTICE_SECTION","VOCABULARY_SECTION","HOME_PAGE_URL","LOGIN_PAGE_URL","arrayOfPrivateURLs","failedIdentity","failLogin","identityStatus","language","initialiseRequest","completeRequest","failRequest","initialiseAddCategoryRequest","context","category","message","RECEIVED_MODAL_ITEMS","OPEN_MODAL","CLOSE_MODAL","modalItems","triggeredBy","isModalOpen","setModalItems","showModal","closeModal","languages","czech","english","difficultyLimits","high","medium","findIndexOfRandomElement","length","Math","floor","random","practiceFailed","assembleAttemptCount","assemble","allAnswers","correctAnswer","cardOptions","index","isCorrect","phrase","id","i","some","item","inEnglish","filter","option","assembleStatus","options","signupFailed","signupStatus","rootReducer","combineReducers","user","state","action","request","content","modal","exercise","signupState","composedEnhancer","window","__REDUX_DEVTOOLS_EXTENSION__","f","middlewareEnhancer","applyMiddleware","thunk","composedMiddleware","compose","store","createStore","Loading","this","props","load","prevProps","prevState","snapshot","React","AuthenticationBoundary","url","history","location","pathname","includes","retrieveIdentity","isAuthorised","hasAuthorisationFailed","children","to","actionCreators","text","connect","colors","spaces","dimensions","buttonWidth","itemHeight","small","large","measures","borderRadius","actionRadius","borderThickness","textAreaHeight","thinFontWeight","regularFontWeight","thickFontWeight","smallFontSize","regularFontSize","largeFontSize","titleFontSize","actionFontSize","highOpacity","lowOpacity","zFirstLevel","zSecondLevel","boxShadow","transitionFast","transitionSlow","theme","submit","cancel","regular","button","background","circle","textColor","pathColor","trailColor","getAppearanceColor","appearance","element","GlobalStyle","createGlobalStyle","YuiTitle","styled","div","hasFullLength","YuiTitleLine","span","Navbar","nav","NavbarActions","MainSection","SectionContainer","isCentered","isTopLevel","CircleContainer","size","CategoryContainer","InfoContainer","flex","column","TextContainer","Tag","selected","sections","SectionBarContainer","customTagStyle","margin","NavigationBar","getSectionFromUrl","split","slice","console","log","currentSection","section","setState","map","toLowerCase","style","onClick","handleClick","withRouter","ModalContainer","ModalItem","isActive","ButtonContainer","Button","ActionButtonContainer","ActionButton","Modal","obj","isEditable","handleSelection","bind","isEditing","onSelect","Object","keys","toString","cleanedUpState","key","isValidEntry","values","entry","onCompleteEdit","e","target","value","entries","modalItem","isBeingEdited","onFocus","onChange","handleEdit","name","zIndex","completeEdit","addModalItem","disabled","MenuOpener","CircleProgress","percentage","colorObj","strokeWidth","styles","buildStyles","PracticeResult","onRestart","Component","PracticeModal","progressPercentage","showResult","handleSelect","handleSubmit","usersDifficultySelection","levelOfDifficulty","usersCategorySelection","selectedPhrases","categories","phrases","assembleExercise","prepareExercise","count","divider","practiceCount","submitPractice","phraseID","restartPractice","restartExercise","difficulty","correctAnswers","countOfCorrectAnswers","arrayOfAllAnswers","exerciseCreated","array","j","temp","shuffleArray","ctx","ok","Text","p","SubText","InfoLine","heading","description","PracticeSection","selections","isReadyToExercise","showExercise","mediumDifficultyCount","highDifficultyCount","openMenu","selectedCategory","selectedLevelOfDifficulty","arrayOfSelectedPhrases","existsLevelOfDifficulty","trigger","validateSelection","handleCompleteEdit","goToExercise","mapActionsToProps","OptionsContainer","width","ChooseLanguage","as","from","handleSwitch","PhraseContainer","CustomTextArea","textarea","DisplayTranslation","EnterPhrase","isFocused","isTypingDisabled","error","isTypingEnabled","bringFocus","handleChange","translatedPhrase","placeHolder","handleFocus","onBlur","handleBlur","handleKeyInput","placeholder","Overlay","VocabularySection","debounceTranslate","targetLanguage","isReadyToSubmit","hasPhraseFocus","func","timer","timeout","args","clearTimeout","setTimeout","apply","debounce","previousContent","currentContent","join","userInput","trim","requestTranslation","initialiseAddPhraseRequest","selection","handleModalComplete","triggerDropdown","handleBringFocus","NavigationsBoundary","match","params","sectionId","renderSection","Dashboard","path","component","SectionsBoundary","exact","DefaultLayout","InputWrapper","hasFocus","Label","label","Input","input","UserInput","useState","setHasFocus","htmlFor","StyledContainer","StyledTitle","LogInPage","email","password","preventDefault","initialiseLogin","onSubmit","push","go","undefined","SignUpPage","initialiseSignup","ErrorPage","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bd789e9.chunk.js","sourcesContent":["//SIGNUP\nexport const SIGNUP_IDLE = 'SIGNUP_IDLE'\nexport const SIGNUP_REQUESTED = 'SIGNUP_REQUESTED';\nexport const SIGNUP_SUCCESSFUL = 'SIGNUP_SUCCESSFUL';\nexport const SIGNUP_FAILED = 'SIGNUP_FAILED';\n\n//IDENTITY\nexport const IDENTITY_IDLE = 'IDENTITY_IDLE';\nexport const IDENTITY_REQUESTED = 'IDENTITY_REQUESTED';\nexport const IDENTITY_RECEIVED = 'IDENTITY_RECEIVED';\nexport const IDENTITY_FAILED = 'IDENTITY_FAILED';\n\n//CONTENT\n\nexport const CONTENT_REQUESTED = 'CONTENT_REQUESTED';\nexport const CONTENT_RECEIVED = 'CONTENT_RECEIVED';\nexport const CONTENT_FAILED = 'CONTENT_FAILED';\nexport const CONTENT_IDLE = 'CONTENT_IDLE';\n\n//FIREBASE\nexport const REQUEST_IDLE = 'REQUEST_IDLE';\nexport const REQUEST_INITIALISED = 'REQUEST_INITIALISED';\nexport const REQUEST_SUCCESSFUL = 'REQUEST_SUCCESSFUL';\nexport const REQUEST_FAILED = 'REQUEST_FAILED';\n\n//PRACTICE\n\nexport const EMPTY_EXERCISE = 'EMPTY_EXERCISE';\nexport const ATTEMPT_IN_PROGRESS = 'ATTEMPT_IN_PROGRESS';\nexport const EXERCISE_CREATED = 'EXERCISE_CREATED';\nexport const EXERCISE_FAILED = 'EXERCISE_FAILED';\nexport const PRACTICE_SUCCESSFUL = 'PRACTICE_SUCCESSFUL';\nexport const PRACTICE_FAILED = 'PRACTICE_FAILED';\nexport const PRACTICE_IDLE = 'PRACTICE_IDLE';\n\nexport type AssembleStatusType = 'EMPTY_EXERCISE' | 'ATTEMPT_IN_PROGRESS' | 'EXERCISE_CREATED' | 'EXERCISE_FAILED';\nexport type PracticeResultType = 'PRACTICE_SUCCESSFUL' | 'PRACTICE_FAILED' | 'PRACTICE_IDLE';\n","import { ActionType } from './commons';\nimport { CONTENT_REQUESTED, CONTENT_RECEIVED, CONTENT_FAILED, CONTENT_IDLE } from './constants';\nimport { Dispatch } from 'react';\nimport { DatabaseModel } from '../conf/dataModel';\n\nexport interface ReducerState {\n\tuserContent: DatabaseModel | {};\n\tcontentStatus: string;\n}\n\nconst initialState = {\n\tuserContent: {},\n\tcontentStatus: CONTENT_IDLE\n};\n\nconst requestContent = () => ({ type: CONTENT_REQUESTED });\nconst receiveContent = (payload: any) => ({ type: CONTENT_RECEIVED, payload });\nconst failedContent = () => ({ type: CONTENT_FAILED });\n\nexport type TGetUserData = (uid: string) => (dispatch: Dispatch<ActionType<any>>) => void\nexport const getUserData:TGetUserData = (uid) => async (dispatch) => {\n\tdispatch(requestContent());\n\tif (!uid) {\n\t\tdispatch(failedContent());\n\t\treturn;\n\t}\n\ttry {\n\t\tconst response: any = await fetch('/getSession', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({ uid })\n\t\t});\n\t\tif (response.status < 300) {\n\t\t\tconst result = await response.json();\n\t\t\tdispatch(receiveContent(result));\n\t\t} else {\n\t\t\tdispatch(failedContent());\n\t\t}\n\t} catch (err) {\n\t\tdispatch(failedContent());\n\t\tthrow new Error(`User data could not be fetched: ${err}`);\n\t}\n};\n\nexport function reducer(state: ReducerState = initialState, action: ActionType<any>): ReducerState {\n\tswitch (action.type) {\n\t\tcase CONTENT_REQUESTED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontentStatus: CONTENT_REQUESTED\n\t\t\t};\n\t\tcase CONTENT_RECEIVED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserContent: action.payload,\n\t\t\t\tcontentStatus: CONTENT_RECEIVED\n\t\t\t};\n\t\tcase CONTENT_FAILED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontentStatus: CONTENT_FAILED\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","// SECTIONS\n\nexport const PRACTICE_SECTION = 'Practice';\nexport const VOCABULARY_SECTION = 'Vocabulary';\n\n// URLS\n\nexport const HOME_PAGE_URL = '/dashboard';\nexport const LOGIN_PAGE_URL = '/login';\nexport const SIGNUP_PAGE_URL = '/signup';\n\nexport const arrayOfPrivateURLs = [HOME_PAGE_URL];\n","import { Dispatch } from 'react';\nimport { ActionType } from './commons';\nimport { IDENTITY_REQUESTED, IDENTITY_RECEIVED, IDENTITY_FAILED, IDENTITY_IDLE } from './constants';\nimport { history } from '../index';\nimport { getUserData } from './content';\nimport { HOME_PAGE_URL } from '../utils/constants';\n\nexport type Identity = {\n\tuid: string;\n\tidentityStatus: string;\n\tlanguage: 'cs';\n};\n\ninterface LoginProps {\n\temail: string;\n\tpassword: string;\n}\n// Action creators\nconst requestIdentity = () => ({ type: IDENTITY_REQUESTED });\nconst receiveIdentity = (payload: string) => ({ type: IDENTITY_RECEIVED, payload: payload });\nconst failedIdentity = () => ({ type: IDENTITY_FAILED });\n\nconst requestLogin = () => ({ type: IDENTITY_REQUESTED });\nconst completeLogin = (payload: string) => ({ type: IDENTITY_RECEIVED, payload: payload });\nconst failLogin = () => ({ type: IDENTITY_FAILED });\n\n// Actions\nexport const initialiseLogin = (context: LoginProps) => async (dispatch: Dispatch<ActionType<string>>) => {\n\tconst { email, password } = context;\n\tif (!email || !password) {\n\t\tdispatch(failLogin());\n\t\tconsole.error('either email or password is missing:', email, password);\n\t\treturn;\n\t}\n\ttry {\n\t\tdispatch(requestLogin());\n\n\t\tconst response = await fetch('/login', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({ email, password })\n\t\t});\n\t\tif (response.status < 300) {\n\t\t\tconst result = await response.json();\n\t\t\tawait getUserData(result.user.uid)(dispatch);\n\t\t\tdispatch(completeLogin(result.user.uid));\n\t\t\thistory.push(`${HOME_PAGE_URL}`);\n\t\t\thistory.go(0);\n\t\t} else {\n\t\t\tdispatch(failLogin());\n\t\t}\n\t} catch (err) {\n\t\tdispatch(failedIdentity());\n\t\tthrow new Error(`Request failed: ${err}`);\n\t}\n};\n\nexport const retrieveIdentity = () => async (dispatch: Dispatch<ActionType<string>>) => {\n\tdispatch(requestIdentity());\n\ttry {\n\t\tconst response = await fetch('/getIdentity', {\n\t\t\tmethod: 'GET'\n\t\t});\n\t\tif (response.status < 300) {\n\t\t\tconst result = await response.text();\n\t\t\tdispatch(receiveIdentity(result));\n\t\t} else {\n\t\t\tdispatch(failedIdentity());\n\t\t}\n\t} catch (err) {\n\t\tdispatch(failedIdentity());\n\t\tthrow new Error(`Error occurred trying to get user data: ${err}`);\n\t}\n};\n\nconst initialState = {\n\tuid: '',\n\tidentityStatus: IDENTITY_IDLE,\n\tlanguage: 'cs' as 'cs'\n};\n\nexport function reducer(state: Identity = initialState, action: ActionType<string>): Identity {\n\tswitch (action.type) {\n\t\tcase IDENTITY_REQUESTED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tidentityStatus: IDENTITY_REQUESTED\n\t\t\t};\n\t\tcase IDENTITY_RECEIVED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuid: action.payload!,\n\t\t\t\tidentityStatus: IDENTITY_RECEIVED\n\t\t\t};\n\t\tcase IDENTITY_FAILED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuid: '',\n\t\t\t\tidentityStatus: IDENTITY_FAILED\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { Dispatch } from 'react';\nimport { ActionType } from './commons';\nimport { getUserData } from './content';\nimport { REQUEST_SUCCESSFUL, REQUEST_INITIALISED, REQUEST_FAILED, REQUEST_IDLE } from './constants';\n\ninterface ActionProps {\n\ttype: string;\n}\n\nexport interface ReducerState {\n\tstatus: string;\n\tmessage: string;\n}\ninterface PhraseRequestProps {\n\tuid: string;\n\tphrase: string;\n\tlanguage: string;\n\tcategory: string;\n\ttype: string;\n\tinEnglish: string;\n}\nexport interface CategoryRequestProps {\n\tcategory: string;\n\tlanguage: string;\n\tuid: string;\n}\nexport type PhraseRequestType = (context: PhraseRequestProps) => (dispatch: Dispatch<ActionType<any>>) => void;\nexport type CategoryRequestType = (context: CategoryRequestProps) => (dispatch: Dispatch<ActionType<any>>) => void;\n\nfunction initialiseRequest() {\n\treturn {\n\t\ttype: REQUEST_INITIALISED\n\t};\n}\nfunction completeRequest() {\n\treturn {\n\t\ttype: REQUEST_SUCCESSFUL\n\t};\n}\n\nfunction failRequest() {\n\treturn {\n\t\ttype: REQUEST_FAILED\n\t};\n}\n\nexport const initialiseAddPhraseRequest: PhraseRequestType = (context) => async (dispatch) => {\n\tdispatch(initialiseRequest());\n\t// fetch\n\tconst { uid, phrase } = context;\n\tif (!uid && !phrase) {\n\t\tdispatch(failRequest());\n\t\treturn;\n\t}\n\ttry {\n\t\tconst response = await fetch('/addPhrase', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(context)\n\t\t});\n\t\tif (response.status < 300) {\n\t\t\tawait getUserData(uid)(dispatch);\n\t\t\tdispatch(completeRequest());\n\t\t\tconsole.log(response.body);\n\t\t} else {\n\t\t\tdispatch(failRequest());\n\t\t\tconsole.log(response.body);\n\t\t}\n\t} catch (err) {\n\t\tdispatch(failRequest());\n\t\tthrow new Error(`Request to server failed ${err}`);\n\t}\n};\n\nexport const initialiseAddCategoryRequest: CategoryRequestType = (context) => async (dispatch) => {\n\tdispatch(initialiseRequest());\n\tconst { uid, language, category } = context;\n\tif (!uid && !language && !category) {\n\t\tdispatch(failRequest());\n\t\treturn;\n\t}\n\ttry {\n\t\tconst response = await fetch('/addCategory', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(context)\n\t\t});\n\t\tif (response.status < 300) {\n\t\t\tawait getUserData(uid)(dispatch);\n\t\t\tdispatch(completeRequest());\n\t\t} else {\n\t\t\tdispatch(failRequest());\n\t\t}\n\t} catch (err) {\n\t\tdispatch(failRequest());\n\t\tthrow new Error(`Request to server failed ${err}`);\n\t}\n};\n\nconst initialState = {\n\tstatus: REQUEST_IDLE,\n\tmessage: ''\n};\n\nexport function reducer(state: ReducerState = initialState, action: ActionProps) {\n\tswitch (action.type) {\n\t\tcase REQUEST_INITIALISED:\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\t\tcase REQUEST_SUCCESSFUL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: REQUEST_SUCCESSFUL,\n\t\t\t\tmessage: 'Your phrase has been added successfully.'\n\t\t\t};\n\t\tcase REQUEST_FAILED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: REQUEST_FAILED,\n\t\t\t\tmessage: 'Your phrase could not be added.'\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { ActionType } from './commons';\nimport { Selections as VocabularySelections } from '../components/DefaultLayout/vocabulary/VocabularySection';\nimport { Selection as PracticeSelection } from '../components/DefaultLayout/practice/PracticeSection';\n\nconst RECEIVED_MODAL_ITEMS = 'RECEIVED_MODAL_ITEMS';\nconst OPEN_MODAL = 'OPEN_MODAL';\nconst CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport type TriggerType = keyof PracticeSelection | keyof VocabularySelections | '';\n\ninterface PayloadType<T> {\n\tmodalItems: string[];\n\ttriggeredBy: T;\n}\n\nexport interface ReducerState<T> extends PayloadType<T> {\n\tisModalOpen: boolean;\n}\n\nexport type ModalItemsType = (modalItems: string[], triggeredBy: TriggerType) => ActionType<PayloadType<TriggerType>>;\n\nexport type ModalShowType = () => ActionType<undefined>;\n\nconst initialState: ReducerState<TriggerType> = {\n\tmodalItems: [],\n\ttriggeredBy: '',\n\tisModalOpen: false\n};\nexport const setModalItems: ModalItemsType = (modalItems, triggeredBy) => ({\n\ttype: RECEIVED_MODAL_ITEMS,\n\tpayload: { modalItems, triggeredBy }\n});\nexport const showModal: ModalShowType = () => ({ type: OPEN_MODAL });\nexport const closeModal: ModalShowType = () => ({ type: CLOSE_MODAL });\n\nexport function reducer(state = initialState, action: ActionType<PayloadType<TriggerType>>): ReducerState<TriggerType> {\n\tswitch (action.type) {\n\t\tcase RECEIVED_MODAL_ITEMS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmodalItems: action.payload!.modalItems,\n\t\t\t\ttriggeredBy: action.payload!.triggeredBy\n\t\t\t};\n\t\tcase OPEN_MODAL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisModalOpen: true\n\t\t\t};\n\t\tcase CLOSE_MODAL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisModalOpen: false\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","// GENERIC\nexport type ValueOf<T> = T[keyof T];\n\n// VOCABULARY SECTION\n\nexport type LanguageLiterals = 'czech' | 'english';\ntype Languages = {\n\t[language in LanguageLiterals]: string;\n};\n\nexport const languages: Languages = {\n\tczech: 'cs',\n\tenglish: 'en'\n};\n\n// PRACTICE SECTION\n\nexport type difficultyLiterals = 'medium' | 'high';\nexport type difficultyType = {\n\t[difficulty in difficultyLiterals]: number;\n};\n\nexport const difficultyLimits: difficultyType = {\n\thigh: 1,\n\tmedium: 3\n};\nexport const practiceCardOptions = 4;\nexport const minExpectedCapacity = 20;\nexport const assembleAttemptLimit = 400;\n","import {\n\tassembleAttemptLimit,\n\tdifficultyLimits,\n\tdifficultyLiterals,\n\tpracticeCardOptions\n} from '../utils/fixedValues';\nimport { Dispatch } from 'react';\nimport {\n\tEMPTY_EXERCISE,\n\tATTEMPT_IN_PROGRESS,\n\tEXERCISE_FAILED,\n\tEXERCISE_CREATED,\n\tAssembleStatusType,\n\tPRACTICE_FAILED,\n\tPRACTICE_IDLE,\n\tPracticeResultType,\n\tPRACTICE_SUCCESSFUL\n} from './constants';\nimport { PhraseModel } from '../conf/dataModel';\n\nexport interface IPayload {\n\tisCorrect: boolean;\n\tphrase: PhraseModel;\n\tid: string;\n}\n\ninterface ReducerState {\n\tassembleStatus: AssembleStatusType;\n\toptions: IPayload[];\n\tresult: PracticeResultType;\n}\n\nexport interface ISubmitCtx {\n\tcategory: string;\n\tuid: string;\n\tphraseID: string;\n\tlanguage: string;\n\tisCorrect: boolean;\n}\n\nconst attemptToCreateExercise = () => ({ type: ATTEMPT_IN_PROGRESS });\nconst exerciseCreated = (payload: IPayload[]) => ({ type: EXERCISE_CREATED, payload });\nconst failedToCreateExercise = () => ({ type: EXERCISE_FAILED });\nconst findIndexOfRandomElement = (length: number) => Math.floor(Math.random() * length);\n\nconst practiceSuccessful = () => ({ type: PRACTICE_SUCCESSFUL });\nconst practiceFailed = () => ({ type: PRACTICE_FAILED });\nconst resetPractice = () => ({ type: PRACTICE_IDLE });\n\nlet assembleAttemptCount = 0;\n\nconst shuffleArray = (array: IPayload[]) => {\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\tlet temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n\treturn array;\n};\n\nconst assemble = (allAnswers: any, correctAnswer: any, cardOptions: IPayload[]) => {\n\tlet index: number;\n\tcardOptions[0] = { isCorrect: true, phrase: correctAnswer[1], id: correctAnswer[0] };\n\tfor (let i = 1; i < practiceCardOptions; i++) {\n\t\tindex = findIndexOfRandomElement(allAnswers.length);\n\n\t\tconst isDuplicate = cardOptions.some(\n\t\t\t// @ts-ignore\n\t\t\t(item: any) => item.phrase.inEnglish === allAnswers[index][1].inEnglish\n\t\t);\n\t\tif (!isDuplicate) {\n\t\t\tcardOptions[i] = { isCorrect: false, phrase: allAnswers[index][1], id: allAnswers[index][0] };\n\t\t\tassembleAttemptCount = 0;\n\t\t} else if (assembleAttemptCount < assembleAttemptLimit) {\n\t\t\tassembleAttemptCount++;\n\n\t\t\tassemble(allAnswers, correctAnswer, cardOptions);\n\t\t}\n\t}\n\tcardOptions = cardOptions.filter((option: any) => !!option);\n\treturn cardOptions;\n};\n\nexport const assembleExercise =\n\t(allAnswers: any, difficulty: difficultyLiterals, cardOptions: any) => (dispatch: any) => {\n\t\tif (allAnswers.length < practiceCardOptions) {\n\t\t\tdispatch(failedToCreateExercise());\n\t\t}\n\t\tdispatch(attemptToCreateExercise());\n\n\t\tconst correctAnswers: any = {};\n\t\tlet countOfCorrectAnswers = 0;\n\t\tfor (const key in allAnswers) {\n\t\t\tif (allAnswers[key].practiceCount < difficultyLimits[difficulty]) {\n\t\t\t\tcorrectAnswers[key] = allAnswers[key];\n\t\t\t\tcountOfCorrectAnswers++;\n\t\t\t}\n\t\t}\n\t\tconst correctAnswer: any =\n\t\t\tObject.entries(correctAnswers)[findIndexOfRandomElement(countOfCorrectAnswers)];\n\t\tconst arrayOfAllAnswers = Object.entries(allAnswers);\n\t\tconst payload = assemble(arrayOfAllAnswers, correctAnswer, cardOptions);\n\t\tdispatch(exerciseCreated(shuffleArray(payload)));\n\t};\n\nexport const submitPractice = (ctx: ISubmitCtx) => async (dispatch: Dispatch<any>) => {\n\tconst { isCorrect, language, uid, phraseID, category } = ctx;\n\tif (!isCorrect) {\n\t\tdispatch(practiceFailed());\n\t\treturn;\n\t}\n\ttry {\n\t\tconst response = await fetch('/practice', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({ phraseID, language, uid, category })\n\t\t});\n\t\tif (response.ok) {\n\t\t\tdispatch(practiceSuccessful());\n\t\t} else {\n\t\t\tdispatch(practiceFailed());\n\t\t}\n\t} catch (err) {\n\t\tdispatch(practiceFailed());\n\t}\n};\n\nexport const restartPractice = () => (dispatch: Dispatch<any>) => {\n\tdispatch(resetPractice());\n};\n\nconst initialState: ReducerState = {\n\tassembleStatus: EMPTY_EXERCISE,\n\toptions: [],\n\tresult: PRACTICE_IDLE\n};\nexport const reducer = (state = initialState, action: any) => {\n\tswitch (action.type) {\n\t\tcase ATTEMPT_IN_PROGRESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tassembleStatus: ATTEMPT_IN_PROGRESS\n\t\t\t};\n\t\tcase EXERCISE_CREATED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tassembleStatus: EXERCISE_CREATED,\n\t\t\t\toptions: action.payload\n\t\t\t};\n\t\tcase EXERCISE_FAILED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tassembleStatus: EXERCISE_FAILED\n\t\t\t};\n\t\tcase PRACTICE_IDLE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresult: PRACTICE_IDLE\n\t\t\t};\n\t\tcase PRACTICE_SUCCESSFUL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresult: PRACTICE_SUCCESSFUL\n\t\t\t};\n\t\tcase PRACTICE_FAILED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresult: PRACTICE_FAILED\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import {SIGNUP_REQUESTED, SIGNUP_SUCCESSFUL, SIGNUP_FAILED, SIGNUP_IDLE} from './constants';\nimport {Dispatch} from \"react\";\nimport {history} from \"../index\";\nimport { LOGIN_PAGE_URL} from \"../utils/constants\";\nimport {initialiseAddCategoryRequest} from \"./firebase\";\nimport {languages} from \"../utils/fixedValues\";\n\ninterface IAction {\n    type: string;\n}\n\nexport interface IState {\n    signupStatus: string;\n}\n\n// Actions\nconst signupRequested = () => ({type: SIGNUP_REQUESTED})\nconst signupSuccessful = () => ({type: SIGNUP_SUCCESSFUL})\nconst signupFailed = () => ({type: SIGNUP_FAILED})\n\ninterface ICtx {\n    email: string;\n    password: string\n}\ntype TInitialiseSignup = (ctx: ICtx) => void\n\nexport const initialiseSignup: TInitialiseSignup = (ctx) => async (dispatch: Dispatch<IAction>) => {\n    dispatch(signupRequested());\n    try {\n        const {email, password} = ctx;\n        const response = await fetch('/signUp', {\n            method: 'POST',\n            body: JSON.stringify({email, password})\n        });\n        if (response.ok) {\n            const result = await response.json();\n            if(result.user.uid){\n                await initialiseAddCategoryRequest({category: 'reading', uid: result.user.uid , language: languages.czech})(dispatch);\n            }\n            dispatch(signupSuccessful())\n            history.push(`${LOGIN_PAGE_URL}`);\n            history.go(0);\n        } else {\n            dispatch(signupFailed());\n        }\n    } catch (e) {\n        dispatch(signupFailed());\n        throw e;\n    }\n}\n\nconst initialState: IState = {\n    signupStatus: SIGNUP_IDLE\n}\n\nexport const reducer = (state = initialState, action: IAction) => {\n    switch (action.type) {\n        case SIGNUP_REQUESTED:\n            return {\n                signupStatus: SIGNUP_REQUESTED\n            }\n        case SIGNUP_SUCCESSFUL:\n            return {\n                signupStatus: SIGNUP_SUCCESSFUL\n            }\n        case SIGNUP_FAILED:\n            return {\n                signupStatus: SIGNUP_FAILED\n            }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport { reducer as retrieveIdentity, Identity } from './identity';\nimport { reducer as phraseRequest, ReducerState as RequestState } from './firebase';\nimport { reducer as content, ReducerState as ContentState } from './content';\nimport { reducer as modal, ReducerState as ModalState, TriggerType } from './modal';\nimport { reducer as exercise } from './practice';\nimport {reducer as signupState, IState as ISignupState} from './signup';\n\nexport type RootState = {\n\tuser: Identity;\n\trequest: RequestState;\n\tcontent: ContentState;\n\tmodal: ModalState<TriggerType>;\n\texercise: any;\n\tsignupState: ISignupState\n};\nexport const rootReducer = combineReducers({\n\tuser: retrieveIdentity,\n\trequest: phraseRequest,\n\tcontent,\n\tmodal,\n\texercise,\n\tsignupState\n});\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport { rootReducer } from './reducer';\nimport thunk from 'redux-thunk';\n\n// @ts-ignore\nconst composedEnhancer = window.__REDUX_DEVTOOLS_EXTENSION__\n  ? // @ts-ignore\n    window.__REDUX_DEVTOOLS_EXTENSION__()\n  : (f: Function) => f;\n\nconst middlewareEnhancer = applyMiddleware(thunk);\nconst composedMiddleware = compose(middlewareEnhancer, composedEnhancer);\nexport const store = createStore(rootReducer, composedMiddleware);\n","import * as React from 'react';\n\nexport default class Loading extends React.Component<any> {\n\tcomponentDidMount() {\n\t\tif (this.props.load) {\n\t\t\tthis.props.load();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<{}>, snapshot?: any) {\n\t\tif (this.props.load && prevProps.load !== this.props.load) {\n\t\t\tthis.props.load();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn <div>Loading...</div>;\n\t}\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport { RootState } from '../redux/reducer';\nimport { ReducerState as ContentType } from '../redux/content';\nimport { Identity, retrieveIdentity } from '../redux/identity';\nimport { getUserData } from '../redux/content';\nimport {\n\tCONTENT_FAILED,\n\tCONTENT_RECEIVED,\n\tCONTENT_REQUESTED,\n\tIDENTITY_FAILED,\n\tIDENTITY_IDLE,\n\tIDENTITY_RECEIVED,\n\tIDENTITY_REQUESTED\n} from '../redux/constants';\n\nimport Loading from './Loading';\nimport { Redirect } from 'react-router-dom';\nimport { history } from '../index';\nimport { LOGIN_PAGE_URL, arrayOfPrivateURLs } from '../utils/constants';\n\ninterface AuthenticationBoundaryProps {\n\tgetUserData: Function;\n\tretrieveIdentity: Function;\n\tchildren?: any;\n\tdispatch?: any;\n\tuser: Identity;\n\tcontent: ContentType;\n}\n\nclass AuthenticationBoundary extends React.Component<AuthenticationBoundaryProps, any> {\n\trender() {\n\t\tconst isAuthorisationNeeded = arrayOfPrivateURLs.some((url) => history.location.pathname.includes(url));\n\t\tif (!isAuthorisationNeeded) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst {\n\t\t\tuser: { uid, identityStatus },\n\t\t\tcontent: { contentStatus },\n\t\t\tretrieveIdentity,\n\t\t\tgetUserData\n\t\t} = this.props;\n\n\t\tconst isAuthorised = identityStatus === IDENTITY_RECEIVED && contentStatus === CONTENT_RECEIVED;\n\t\tconst hasAuthorisationFailed = identityStatus === IDENTITY_FAILED || contentStatus === CONTENT_FAILED;\n\t\tconst isLoading = identityStatus === IDENTITY_REQUESTED || contentStatus === CONTENT_REQUESTED;\n\t\tif (isLoading) {\n\t\t\treturn <Loading />;\n\t\t}\n\t\tif (isAuthorised) {\n\t\t\treturn this.props.children;\n\t\t}\n\n\t\tif (identityStatus === IDENTITY_IDLE) {\n\t\t\treturn <Loading load={retrieveIdentity} message={'retrieving identity'} />;\n\t\t} else if (uid && !hasAuthorisationFailed && contentStatus !== CONTENT_REQUESTED) {\n\t\t\treturn <Loading load={() => getUserData(uid)} message={'retrieving data'} />;\n\t\t} else {\n\t\t\treturn <Redirect to={LOGIN_PAGE_URL} />;\n\t\t}\n\t}\n}\n\nconst actionCreators = {\n\tgetUserData,\n\tretrieveIdentity\n};\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tuser: state.user,\n\t\tcontent: state.content\n\t};\n};\n\nexport default connect(mapStateToProps, actionCreators)(AuthenticationBoundary);\n","export const colors = {\n\tsubmit: '#42D77E',\n\tcancel: '#FF83A1',\n\tprimary: '#646464',\n\tsecondary: '#F5F5F5',\n\twhite: '#FFFFFF',\n\tblack: '#353535',\n\tactive: '#DBDBDB',\n\toverlay: '#F5F5F5',\n\tshadow: '#18171c39'\n};\n\nexport const spaces = {\n\ttiny: '3px',\n\tsmall: '10px',\n\tmedium: '20px',\n\tlarge: '40px'\n};\n\nexport const dimensions = {\n\tbuttonWidth: '50px',\n\titemHeight: '50px',\n\tsmall: '60px',\n\tmedium: '140px',\n\tlarge: '200px'\n};\n\nexport const measures = {\n\tborderRadius: '5px',\n\tactionRadius: '50%',\n\tborderThickness: '2px',\n\ttextAreaHeight: '70px',\n\tthinFontWeight: 300,\n\tregularFontWeight: 400,\n\tthickFontWeight: 600,\n\tsmallFontSize: '12px',\n\tregularFontSize: '14px',\n\tlargeFontSize: '16px',\n\ttitleFontSize: '20px',\n\tactionFontSize: '28px',\n\thighOpacity: 0.6,\n\tlowOpacity: 0.3,\n\tzFirstLevel: 9999,\n\tzSecondLevel: 999,\n\tboxShadow: `4px 4px 12px ${colors.shadow}`,\n\ttransitionFast: '200ms',\n\ttransitionSlow: '400ms'\n};\n","import {colors} from '../fixedValues';\nimport {createGlobalStyle} from 'styled-components';\n\nexport type AppearanceNames = 'submit' | 'cancel' | 'regular' | 'button';\ntype Elements = 'text' | 'background';\ntype Colors = {\n    submit: string;\n    cancel: string;\n    regular: string;\n    button: string;\n};\ntype CircleColors = {\n    textColor: string;\n    pathColor: string;\n    trailColor: string;\n};\ntype CircleType = {\n    regular: CircleColors;\n    submit: CircleColors;\n};\ntype Theme = {\n    colors: {\n        text: Colors;\n        background: Colors;\n        circle: CircleType;\n    };\n    getAppearanceColor: Function;\n};\n\nexport const theme: Theme = {\n    colors: {\n        text: {\n            submit: colors.white,\n            cancel: colors.white,\n            regular: colors.primary,\n            button: colors.white\n        },\n        background: {\n            submit: colors.submit,\n            cancel: colors.cancel,\n            regular: colors.secondary,\n            button: colors.black\n        },\n        circle: {\n            regular: {\n                textColor: colors.primary,\n                pathColor: colors.primary,\n                trailColor: colors.secondary\n            },\n            submit: {\n                textColor: colors.primary,\n                pathColor: colors.submit,\n                trailColor: colors.secondary\n            }\n        }\n    },\n    getAppearanceColor: function (appearance: AppearanceNames, element: Elements) {\n        return this.colors[element][appearance];\n    }\n};\n\nexport const GlobalStyle = createGlobalStyle`\n\n  @import url(\"https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600&display=swap\");\n\n  html {\n    overflow: hidden;\n  }\n\n  body {\n    font-family: 'Montserrat', sans-serif;\n    font-weight: 400;\n    height: 100vh;\n    width: 100vw;\n    box-sizing: border-box;\n    overflow: hidden;\n    margin: 0;\n    color: ${colors.primary};\n    letter-spacing: 0.8px;\n\n    * {\n      box-sizing: inherit;\n      font-family: inherit;\n    }\n  }\n\n  button {\n    outline: none;\n    background: transparent;\n    border: none;\n    color: ${colors.primary};\n    letter-spacing: inherit;\n  }\n\n  #root {\n    height: 100%;\n    width: 100%;\n  }\n\n  h3 {\n    font-weight: 400;\n  }\n`;\n","import styled from 'styled-components';\nimport { colors, spaces, measures } from '../fixedValues';\n\ninterface YuiTitleProps {\n\thasFullLength: boolean;\n}\n\nexport const YuiTitle = styled.div<YuiTitleProps>`\n\tposition: relative;\n\tpadding: 30px ${(props) => (props.hasFullLength ? 0 : spaces.medium)};\n\tdisplay: flex;\n\tjustify-content: center;\n\topacity: ${measures.lowOpacity};\n\tp {\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\ttransform: translateY(-50%);\n\t\tmargin: 0;\n\t\tcolor: ${colors.primary};\n\t\tbackground-color: ${colors.white};\n\t\tpadding: 0 3px;\n\t\tfont-weight: ${measures.thinFontWeight};\n\t\tletter-spacing: 0;\n\t\tspan {\n\t\t\tfont-weight: ${measures.thickFontWeight};\n\t\t}\n\t}\n`;\n\nexport const YuiTitleLine = styled.span<YuiTitleProps>`\n\tflex-grow: ${(props) => (props.hasFullLength ? 1 : 0.8)};\n\theight: 1px;\n\tbackground-color: ${colors.primary};\n`;\n","import styled from 'styled-components';\nimport { colors, spaces } from '../fixedValues';\n\nexport const Navbar = styled.nav`\n\tdisplay: flex;\n\tpadding: ${spaces.medium};\n\tjustify-content: space-between;\n\tmargin-bottom: ${spaces.small};\n\th2 {\n\t\tcolor: ${colors.black};\n\t\tfont-weight: 600;\n\t\tfont-size: 18px;\n\t\tmargin: 0;\n\t}\n`;\n\nexport const NavbarActions = styled.div`\n\tdisplay: flex;\n`;\n","import styled from 'styled-components';\nimport { colors, measures, spaces, dimensions } from '../fixedValues';\n\nexport const MainSection = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-grow: 1;\n  height: 100%;\n  \n`;\n\nexport const SectionContainer = styled.div<{ isTopLevel?: boolean; isCentered?: boolean }>`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: ${(props) => (props.isCentered ? 'center' : '')};\n\talign-items: ${(props) => (props.isCentered ? 'center' : '')};\n\tmargin-bottom: ${spaces.large};\n\tborder-radius: ${measures.borderRadius};\n\tz-index: ${(props) => (props.isTopLevel ? measures.zFirstLevel : 0)};\n\tbox-shadow: ${(props) => (props.isTopLevel ? measures.boxShadow : '')};\n\tbackground-color: ${colors.white};\n`;\n\nexport type ContainerSizes = 'small' | 'medium' | 'large';\n\nexport const CircleContainer = styled.div<{ size: ContainerSizes }>`\n\twidth: ${(props) => dimensions[props.size]};\n\theight: ${(props) => dimensions[props.size]};\n`;\nexport const CategoryContainer = styled.div`\n\tpadding: ${spaces.medium} 0px ${spaces.medium} 4px;\n`;\n\nexport const InfoContainer = styled.div<{ flex?: boolean; column?: boolean }>`\n\tpadding: ${spaces.small} ${spaces.large};\n\tdisplay: ${({ flex }) => (flex ? 'flex' : 'block')};\n\tflex-direction: ${({ column }) => (column ? 'column' : 'row')};\n\tjustify-content: space-between;\n`;\nexport const TextContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n","import styled from 'styled-components';\nimport { colors } from '../fixedValues';\nimport { AppearanceNames } from '../theme';\n\ninterface TagProps {\n\tappearance: AppearanceNames;\n\tselected: boolean;\n}\n\nexport const Tag = styled.button<TagProps>`\n\tcolor: ${(props) => props.theme.getAppearanceColor(props.appearance, 'text')};\n\tbackground-color: ${(props) => props.selected && props.theme.getAppearanceColor(props.appearance, 'background')};\n\tpadding: 8px 16px;\n\tmargin: 0 6px;\n\tfont-weight: 300;\n\tfont-size: 14px;\n\tborder-radius: 5px;\n\ttransition: all 50ms ease-in-out;\n\ta {\n\t\ttext-decoration: none;\n\t\tcolor: inherit;\n\t}\n\t&:active {\n\t\tbackground-color: ${colors.active};\n\t}\n`;\n","import * as React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { PRACTICE_SECTION, VOCABULARY_SECTION } from '../../utils/constants';\n\nimport { Tag } from '../../design/components/Tag';\nimport { spaces } from '../../design/fixedValues';\nimport styled from 'styled-components';\nimport { HOME_PAGE_URL } from '../../utils/constants';\n\nconst sections = [ PRACTICE_SECTION, VOCABULARY_SECTION];\n\nconst SectionBarContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmargin: 0 auto ${spaces.large} auto;\n`;\n\nconst customTagStyle = {\n\tmargin: 0\n};\nclass NavigationBar extends React.Component<any, any> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tconst getSectionFromUrl = this.props.history.location.pathname.split('/').slice(1)[1];\n\t\tconsole.log('@@', this.props.history)\n\t\tthis.state = {\n\t\t\tcurrentSection: getSectionFromUrl\n\t\t};\n\t}\n\n\thandleClick(section: string) {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tcurrentSection: section\n\t\t});\n\t}\n\n\trender(): JSX.Element {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<SectionBarContainer>\n\t\t\t\t\t{sections.map((section, index) => (\n\t\t\t\t\t\t<Tag\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tappearance={'regular'}\n\t\t\t\t\t\t\tselected={section.toLowerCase() === this.state.currentSection}\n\t\t\t\t\t\t\tstyle={customTagStyle}>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={`${HOME_PAGE_URL}/${section.toLowerCase()}`}\n\t\t\t\t\t\t\t\tonClick={() => this.handleClick(section.toLowerCase())}>\n\t\t\t\t\t\t\t\t{section}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Tag>\n\t\t\t\t\t))}\n\t\t\t\t</SectionBarContainer>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default withRouter(NavigationBar);\n","import styled from 'styled-components';\nimport { colors, dimensions, measures, spaces } from '../fixedValues';\n\nexport const ModalContainer = styled.div`\n\tposition: fixed;\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100vw;\n\theight: 90vh;\n\ttop: 0;\n\tleft: 0;\n\tz-index: ${measures.zFirstLevel};\n\tbackground-color: ${colors.white};\n\tbox-shadow: ${measures.boxShadow};\n\tpadding: ${spaces.medium} 0;\n`;\nexport const ModalItem = styled.div<{ isActive: boolean }>`\n\tpadding: ${spaces.small} ${spaces.large};\n\tborder-bottom: ${measures.borderThickness} solid ${colors.secondary};\n\tposition: relative;\n\tmin-height: ${dimensions.itemHeight};\n\tdisplay: flex;\n\talign-items: center;\n\n\tinput {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\topacity: 0;\n\t\tpointer-events: ${(props) => (props.isActive ? 'auto' : 'none')};\n\t}\n\tlabel {\n\t\tflex: 1;\n\t\theight: 100%;\n\t\tline-height: ${dimensions.itemHeight};\n\t}\n`;\n","import * as React from 'react';\nimport { AppearanceNames } from '../theme';\nimport styled from 'styled-components';\nimport { measures, spaces, dimensions } from '../fixedValues';\n\ninterface ButtonProps extends React.HTMLAttributes<HTMLButtonElement> {\n\tappearance: AppearanceNames;\n}\nexport const ButtonContainer = styled.div`\n\tdisplay: flex;\n\tmargin: auto ${spaces.large} 0 ${spaces.large};\n`;\n\nexport const Button = styled.button<ButtonProps>`\n\tbackground-color: ${(props) => props.theme.getAppearanceColor(props.appearance, 'background')};\n\tflex-grow: 1;\n\tpadding: ${spaces.medium} ${spaces.small};\n\tmargin: 0 ${spaces.small};\n\tborder-radius: ${measures.borderRadius};\n\tcolor: ${(props) => props.theme.getAppearanceColor(props.appearance, 'text')};\n\tfont-weight: 600;\n\tfont-size: 16px;\n\tcursor: pointer;\n\t&:disabled{\n\t\tbackground-color: ${props => props.theme.getAppearanceColor('regular','background')};\n\t}\n`;\n\nexport const ActionButtonContainer = styled.div<{ isCentered?: boolean }>`\n\tmargin: auto;\n\tmargin-bottom: ${spaces.small};\n\tmargin-top: ${(props) => (props.isCentered ? 'auto' : 'unset')};\n`;\n\nexport const ActionButton = styled.button<ButtonProps>`\n\tdisplay: block;\n\tmargin-top: ${spaces.small};\n\tbackground-color: ${(props) => props.theme.getAppearanceColor(props.appearance, 'background')};\n\tcolor: ${(props) => props.theme.getAppearanceColor(props.appearance, 'text')};\n\tborder-radius: ${measures.actionRadius};\n\twidth: ${dimensions.buttonWidth};\n\theight: ${dimensions.buttonWidth};\n\tfont-size: ${measures.actionFontSize};\n`;\n","import * as React from 'react';\nimport { ModalContainer, ModalItem } from '../design/components/Modal';\nimport { RootState } from '../redux/reducer';\nimport { closeModal, ModalShowType } from '../redux/modal';\nimport { connect } from 'react-redux';\nimport { ActionButtonContainer, ActionButton, Button, ButtonContainer } from '../design/components/buttons';\nimport { Identity } from '../redux/identity';\n\ninterface ModalProps {\n\tcloseModal: ModalShowType;\n\tmodalItems: string[];\n\tonSelect: (val: any) => void;\n\tonCompleteEdit: any;\n\tuser: Identity;\n\ttriggeredBy: string;\n}\n\ntype ModalState = {\n\tisEditable: { id: string };\n\tmodalItems: { [id: number]: string };\n};\n\nclass Modal extends React.Component<ModalProps, ModalState> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tlet obj: ModalState = {\n\t\t\tisEditable: { id: '' },\n\t\t\tmodalItems: {}\n\t\t};\n\t\tfor (let i = 0; i < props.modalItems.length; i++) {\n\t\t\tobj.modalItems[i] = props.modalItems[i];\n\t\t}\n\t\tthis.state = {\n\t\t\t...obj\n\t\t};\n\t\tthis.handleSelection = this.handleSelection.bind(this);\n\t}\n\n\thandleSelection(item: string, isEditing: boolean) {\n\t\tif (isEditing) {\n\t\t\treturn;\n\t\t}\n\t\tthis.props.onSelect(item);\n\t\tthis.props.closeModal();\n\t}\n\n\taddModalItem() {\n\t\tconst index = Object.keys(this.state.modalItems).length.toString();\n\t\tthis.setState((prevState) => ({\n\t\t\tmodalItems: { ...prevState.modalItems, [index]: '' },\n\t\t\tisEditable: { id: index }\n\t\t}));\n\t}\n\tcompleteEdit() {\n\t\tconst { modalItems } = this.state;\n\t\t//if the user didn't enter a value we wanna clean that up\n\t\tlet cleanedUpState: any = {};\n\t\tfor (const key in modalItems) {\n\t\t\tif (modalItems[key] !== '') {\n\t\t\t\tcleanedUpState[key] = modalItems[key];\n\t\t\t}\n\t\t}\n\t\tconst isValidEntry = !Object.values(this.state.modalItems).some((entry) => entry === '');\n\n\t\tthis.setState({ modalItems: { ...cleanedUpState }, isEditable: { id: '' } });\n\t\tif (isValidEntry) {\n\t\t\tconst index = Object.keys(this.state.modalItems).length - 1;\n\t\t\tconst { language, uid } = this.props.user;\n\t\t\tconst context = {\n\t\t\t\tlanguage,\n\t\t\t\tuid: uid!,\n\t\t\t\tcategory: this.state.modalItems[index]\n\t\t\t};\n\t\t\tthis.props.onCompleteEdit(context);\n\t\t}\n\t}\n\thandleEdit(e: React.ChangeEvent<HTMLInputElement>, id: string) {\n\t\tthis.setState((prevState) => ({ modalItems: { ...prevState.modalItems, [id]: e.target.value } }));\n\t}\n\n\trender(): JSX.Element {\n\t\tconst { closeModal } = this.props;\n\t\tconst { isEditable } = this.state;\n\t\tconst modalItems = Object.entries(this.state.modalItems);\n\t\treturn (\n\t\t\t<ModalContainer>\n\t\t\t\t<ActionButtonContainer>\n\t\t\t\t\t<ActionButton appearance={'regular'} onClick={closeModal}>\n\t\t\t\t\t\tx\n\t\t\t\t\t</ActionButton>\n\t\t\t\t</ActionButtonContainer>\n\t\t\t\t{modalItems.map((item) => {\n\t\t\t\t\tconst [id, modalItem] = item;\n\t\t\t\t\tconst isBeingEdited = id === isEditable.id && isEditable.id !== '';\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ModalItem\n\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\tonClick={() => this.handleSelection(modalItem, isBeingEdited)}\n\t\t\t\t\t\t\tisActive={id === isEditable.id}>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tonFocus={() => this.setState({ isEditable: { id } })}\n\t\t\t\t\t\t\t\tvalue={modalItem}\n\t\t\t\t\t\t\t\tonChange={(e) => this.handleEdit(e, id)}\n\t\t\t\t\t\t\t\tname={id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label>{modalItem}</label>\n\t\t\t\t\t\t\t{isBeingEdited && (\n\t\t\t\t\t\t\t\t<button style={{ zIndex: 999 }} onClick={this.completeEdit.bind(this)}>\n\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ModalItem>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t{this.props.triggeredBy === 'category' && <ButtonContainer>\n\t\t\t\t\t<Button appearance={'submit'} onClick={this.addModalItem.bind(this)} disabled={!!this.state.isEditable.id}>\n\t\t\t\t\t\tAdd new category\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonContainer> }\n\n\t\t\t</ModalContainer>\n\t\t);\n\t}\n}\n\nconst actionCreators = {\n\tcloseModal\n};\n\nconst mapStateToProps = (state: RootState) => ({\n\tmodalItems: state.modal.modalItems,\n\ttriggeredBy: state.modal.triggeredBy,\n\tuser: state.user\n});\nexport default connect(mapStateToProps, actionCreators)(Modal);\n","import styled from 'styled-components';\nimport { colors, measures, spaces } from '../fixedValues';\nimport { ReactNode } from 'react';\n\ninterface MenuOpenerProps {\n\tchildren: ReactNode;\n}\n\n// requires a p and h3 tag\n\nexport const MenuOpener = styled.div<MenuOpenerProps>`\n\tdisplay: flex;\n\tpadding: ${spaces.small} ${spaces.large};\n\tborder-bottom: ${measures.borderThickness} solid ${colors.secondary};\n\tflex-direction: column;\n\t&::after {\n\t\tcontent: '';\n\t\tdisplay: inline-block;\n\t\tborder-top: 6px solid transparent;\n\t\tborder-bottom: 6px solid transparent;\n\t\tborder-left: 6px solid ${colors.black};\n\t\tflex: 0;\n\t\theight: 0;\n\t\twidth: 0;\n\t\tmargin: auto ${spaces.small} auto auto;\n\t}\n\th3 {\n\t\tfont-size: ${measures.largeFontSize};\n\t\tmargin: 0 0 ${spaces.tiny} 0;\n\t\tcolor: ${colors.black};\n\t}\n\tp {\n\t\tfont-size: ${measures.smallFontSize};\n\t\tmargin: 0;\n\t\tcolor: ${colors.primary};\n\t\topacity: 0.6;\n\t\tfont-weight: ${measures.thinFontWeight};\n\t}\n`;\n","import * as React from 'react';\nimport { buildStyles, CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nimport { AppearanceNames, theme } from '../design/theme';\nimport { CircleContainer, ContainerSizes } from '../design/components/containers';\nimport Loading from './Loading';\n\ninterface ICircleProgress {\n\tappearance: AppearanceNames;\n\tpercentage?: number;\n\tsize: ContainerSizes;\n}\n\nexport default function CircleProgress({ appearance, percentage, size }: ICircleProgress) {\n\tconst colorObj = theme.getAppearanceColor(appearance, 'circle');\n\n\tif (typeof percentage === 'number') {\n\t\treturn (\n\t\t\t<CircleContainer size={size}>\n\t\t\t\t<CircularProgressbar\n\t\t\t\t\tvalue={percentage}\n\t\t\t\t\ttext={`${percentage}%`}\n\t\t\t\t\tstrokeWidth={5}\n\t\t\t\t\tstyles={buildStyles(colorObj)}\n\t\t\t\t/>\n\t\t\t</CircleContainer>\n\t\t);\n\t} else {\n\t\treturn <Loading />;\n\t}\n}\n","import React from 'react';\n\ninterface IPracticeResult {\n\tisCorrect: boolean;\n\tonRestart: () => void;\n}\n\nexport default class PracticeResult extends React.Component<IPracticeResult, any> {\n\trender() {\n\t\tconst { isCorrect } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h1>Your answer is: {isCorrect ? 'Correct' : 'Wrong'}</h1>\n\t\t\t\t<button onClick={() => this.props.onRestart()}>OK</button>\n\t\t\t</>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport { RootState } from '../../../redux/reducer';\nimport { ReducerState as ContentState } from '../../../redux/content';\n\nimport { ModalContainer } from '../../../design/components/Modal';\nimport { difficultyType } from '../../../utils/fixedValues';\nimport { Button, ButtonContainer } from '../../../design/components/buttons';\nimport { YuiTitle, YuiTitleLine } from '../../../design/components/YuiTitle';\nimport { SectionContainer } from '../../../design/components/containers';\nimport CircleProgress from '../../CircleProgress';\nimport PracticeResult from './PracticeResult';\nimport {\n\tassembleExercise,\n\tsubmitPractice,\n\tIPayload,\n\tISubmitCtx,\n\trestartPractice\n} from '../../../redux/practice';\nimport { EXERCISE_CREATED } from '../../../redux/constants';\nimport Loading from '../../Loading';\nimport { Identity } from '../../../redux/identity';\n\ninterface PracticeModalProps {\n\tuser: Identity;\n\tlevelOfDifficulty: keyof difficultyType;\n\tcategory: string;\n\tcontent: ContentState;\n\tassembleExercise: any;\n\texercise: any;\n\tsubmitPractice: (ctx: ISubmitCtx) => void;\n\trestartPractice: () => void;\n}\n\nclass PracticeModal extends React.Component<PracticeModalProps, any> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tprogressPercentage: '',\n\t\t\tselected: {},\n\t\t\tshowResult: false\n\t\t};\n\t\tthis.handleSelect = this.handleSelect.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tprepareExercise() {\n\t\tconst usersDifficultySelection = this.props.levelOfDifficulty;\n\t\tconst usersCategorySelection = this.props.category;\n\t\tlet selectedPhrases: any = [];\n\t\tif ('categories' in this.props.content.userContent) {\n\t\t\tselectedPhrases = this.props.content.userContent.categories[usersCategorySelection].phrases;\n\t\t}\n\n\t\tthis.props.assembleExercise(selectedPhrases, usersDifficultySelection, []);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.prepareExercise();\n\t\tlet count = 0;\n\t\tlet divider = 1;\n\t\tif ('practiceCount' in this.props.content.userContent) {\n\t\t\tdivider = this.props.content.userContent.practiceCount || 1;\n\t\t}\n\t\tif ('categories' in this.props.content.userContent) {\n\t\t\tcount = this.props.content.userContent.categories[this.props.category].practiceCount;\n\t\t}\n\t\tthis.setState({ progressPercentage: count / divider });\n\t}\n\n\tasync handleSubmit() {\n\t\tconst { isCorrect, id } = this.state.selected;\n\t\tconst {\n\t\t\tuser: { uid, language },\n\t\t\tcategory\n\t\t} = this.props;\n\t\tawait this.props.submitPractice({ isCorrect, phraseID: id, uid, language, category });\n\t\tthis.setState({ showResult: true });\n\t}\n\n\thandleSelect(option: IPayload) {\n\t\tthis.setState({ selected: option });\n\t}\n\n\trestartExercise() {\n\t\tthis.props.restartPractice();\n\t\tthis.setState({ showResult: false });\n\t\tthis.prepareExercise();\n\t}\n\n\trender() {\n\t\tconst { exercise } = this.props;\n\n\t\tif (exercise.assembleStatus !== EXERCISE_CREATED) {\n\t\t\treturn <Loading />;\n\t\t}\n\t\tconst correctAnswer = exercise.options.filter((option: any) => option.isCorrect)[0].phrase;\n\n\t\treturn (\n\t\t\t<ModalContainer>\n\t\t\t\t<SectionContainer isCentered={true}>\n\t\t\t\t\t{/*Progress Circle*/}\n\t\t\t\t\t<CircleProgress\n\t\t\t\t\t\tappearance={'regular'}\n\t\t\t\t\t\tsize={'large'}\n\t\t\t\t\t\tpercentage={this.state.progressPercentage}\n\t\t\t\t\t/>\n\t\t\t\t\t<h1>Exercise Count</h1>\n\t\t\t\t\t{/*Question*/}\n\t\t\t\t\t{exercise.options.length === 0 ? (\n\t\t\t\t\t\t<div>Selected category doesn't have more than 4 phrases!</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>{correctAnswer.phrase} ?</div>\n\t\t\t\t\t)}\n\t\t\t\t</SectionContainer>\n\t\t\t\t<YuiTitle hasFullLength={true}>\n\t\t\t\t\t<YuiTitleLine hasFullLength={true} />\n\t\t\t\t</YuiTitle>\n\t\t\t\t{/*Answers*/}\n\t\t\t\t{exercise.options.map((option: any) => (\n\t\t\t\t\t<ButtonContainer key={option.phrase.inEnglish}>\n\t\t\t\t\t\t<Button appearance={'regular'} onClick={() => this.handleSelect(option)}>\n\t\t\t\t\t\t\t{option.phrase.inEnglish}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ButtonContainer>\n\t\t\t\t))}\n\t\t\t\t{/*Submit button*/}\n\t\t\t\t<ButtonContainer>\n\t\t\t\t\t<Button appearance={'submit'} onClick={this.handleSubmit}>\n\t\t\t\t\t\tSUBMIT\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonContainer>\n\t\t\t\t{/*Result Modal*/}\n\t\t\t\t{this.state.showResult && (\n\t\t\t\t\t<PracticeResult\n\t\t\t\t\t\tisCorrect={this.state.selected.isCorrect}\n\t\t\t\t\t\tonRestart={this.restartExercise.bind(this)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</ModalContainer>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state: RootState) => ({\n\tuser: state.user,\n\tcontent: state.content,\n\texercise: state.exercise\n});\nconst actionCreators = {\n\tassembleExercise,\n\tsubmitPractice,\n\trestartPractice\n};\nexport default connect(mapStateToProps, actionCreators)(PracticeModal);\n","import styled from 'styled-components';\nimport CircleProgress from '../../components/CircleProgress';\nimport { CircleContainer, InfoContainer, TextContainer } from './containers';\nimport { colors, measures, spaces } from '../fixedValues';\n\nconst Text = styled.p`\n\tmargin: 0 0 ${spaces.tiny} 0;\n\tcolor: ${colors.black};\n`;\n\nconst SubText = styled.p`\n\tcolor: ${colors.primary};\n\topacity: 0.6;\n\tfont-weight: ${measures.thinFontWeight};\n\tmargin: 0;\n\tfont-size: ${measures.smallFontSize};\n`;\n\ninterface ILine {\n\theading: string;\n\tdescription: string;\n\tcount?: number;\n\tpercentage?: number;\n}\n\nconst InfoLine = ({ heading, description, count, percentage }: ILine) => {\n\treturn (\n\t\t<InfoContainer flex={true}>\n\t\t\t<TextContainer>\n\t\t\t\t<Text>{heading}</Text>\n\t\t\t\t<SubText>{description}</SubText>\n\t\t\t</TextContainer>\n\t\t\t<CircleContainer size={'small'}>\n\t\t\t\t<CircleProgress appearance={'submit'} percentage={percentage} size={'small'} />\n\t\t\t</CircleContainer>\n\t\t</InfoContainer>\n\t);\n};\n\nexport default InfoLine;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../../Modal';\n\nimport { RootState } from '../../../redux/reducer';\nimport {\n\tModalItemsType,\n\tModalShowType,\n\tsetModalItems,\n\tshowModal,\n\tReducerState as ModalState\n} from '../../../redux/modal';\nimport { ReducerState as ContentState } from '../../../redux/content';\n\nimport { MenuOpener } from '../../../design/components/MenuOpener';\nimport { MainSection, SectionContainer } from '../../../design/components/containers';\nimport { YuiTitle, YuiTitleLine } from '../../../design/components/YuiTitle';\nimport { difficultyLimits, difficultyType, minExpectedCapacity } from '../../../utils/fixedValues';\nimport { Button, ButtonContainer } from '../../../design/components/buttons';\nimport PracticeModal from './PracticeModal';\nimport { ValueOf } from '../../../utils/fixedValues';\nimport InfoLine from '../../../design/components/InfoLine';\n\nexport interface Option<T> {\n\tselected: T;\n\toptions: T[];\n}\n\nexport interface Selection {\n\tlevelOfDifficulty: Option<keyof difficultyType>;\n\tcategory: Option<string>;\n}\n\ninterface PracticeSectionsState {\n\tselections: Selection;\n\tisReadyToExercise: boolean;\n\tshowExercise: boolean;\n\tmediumDifficultyCount: number;\n\thighDifficultyCount: number;\n}\n\ninterface PracticeSectionProps {\n\tmodal: ModalState<keyof Selection>;\n\tsetModalItems: ModalItemsType;\n\tshowModal: ModalShowType;\n\tcontent: ContentState;\n}\n\nclass PracticeSection extends React.Component<PracticeSectionProps, PracticeSectionsState> {\n\tprivate readonly categories = [''];\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tif ('categories' in this.props.content.userContent) {\n\t\t\tthis.categories = Object.keys(this.props.content.userContent.categories);\n\t\t}\n\n\t\tthis.state = {\n\t\t\tselections: {\n\t\t\t\tcategory: {\n\t\t\t\t\tselected: '',\n\t\t\t\t\toptions: this.categories\n\t\t\t\t},\n\t\t\t\tlevelOfDifficulty: {\n\t\t\t\t\tselected: 'medium',\n\t\t\t\t\toptions: ['medium', 'high']\n\t\t\t\t}\n\t\t\t},\n\t\t\tisReadyToExercise: true,\n\t\t\tshowExercise: false,\n\t\t\tmediumDifficultyCount: 0,\n\t\t\thighDifficultyCount: 0\n\t\t};\n\t\tthis.openMenu = this.openMenu.bind(this);\n\t}\n\n\t//this is checking if phrases of the selected difficulty exists in selected category\n\tvalidateSelection() {\n\t\tconst userContent = this.props.content.userContent;\n\t\tconst selectedCategory = this.state.selections.category.selected;\n\t\tconst selectedLevelOfDifficulty = this.state.selections.levelOfDifficulty.selected;\n\t\tlet arrayOfSelectedPhrases: any[] = [];\n\t\tif ('categories' in userContent) {\n\t\t\tarrayOfSelectedPhrases = Object.values(userContent.categories[selectedCategory].phrases);\n\t\t}\n\n\t\tconst existsLevelOfDifficulty = arrayOfSelectedPhrases.filter(\n\t\t\t(phrase: any) => phrase.practiceCount < difficultyLimits[selectedLevelOfDifficulty]\n\t\t);\n\t\tif (arrayOfSelectedPhrases.length > minExpectedCapacity || existsLevelOfDifficulty) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\thandleSelection(value: ValueOf<Selection>) {\n\t\tif (this.props.modal.triggeredBy === 'levelOfDifficulty' && !this.state.selections.category.selected) {\n\t\t\t//TODO replace with error modal\n\t\t\tconsole.log('select category first');\n\t\t\treturn;\n\t\t}\n\n\t\tconst trigger = this.props.modal.triggeredBy as keyof Selection;\n\t\tthis.setState((prevState) => ({\n\t\t\t...prevState,\n\t\t\tselections: {\n\t\t\t\t...prevState.selections,\n\t\t\t\t[trigger]: {\n\t\t\t\t\t...prevState.selections[trigger],\n\t\t\t\t\tselected: value\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tconst isReadyToExercise =\n\t\t\t!!this.state.selections.levelOfDifficulty.selected && !!this.state.selections.category.selected;\n\n\t\tif (isReadyToExercise) {\n\t\t\tconst isValid = this.validateSelection();\n\n\t\t\tif (isValid) {\n\t\t\t\tconsole.log('ready to exercise');\n\t\t\t\tthis.setState({\n\t\t\t\t\tisReadyToExercise: true\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//TODO replace with error modal\n\t\t\t\tconsole.log(\n\t\t\t\t\t'selected phrase does not fulfill one of the following aspects: \\n selected category capacity is less than minExpectedCapacity \\n selected difficulty capacity does not exists'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\thandleCompleteEdit() {}\n\n\topenMenu(trigger: keyof Selection, value: ValueOf<Selection>) {\n\t\tthis.props.setModalItems(value.options, trigger);\n\t\tthis.props.showModal();\n\t}\n\n\tgoToExercise() {\n\t\tif (!this.state.isReadyToExercise) {\n\t\t\tconsole.log('prepare exercise failed', this.state.isReadyToExercise);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState({\n\t\t\tshowExercise: true\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { selections, showExercise } = this.state;\n\n\t\treturn (\n\t\t\t<MainSection>\n\t\t\t\t{this.props.modal.isModalOpen && (\n\t\t\t\t\t<Modal onCompleteEdit={this.handleCompleteEdit.bind(this)} onSelect={this.handleSelection.bind(this)} />\n\t\t\t\t)}\n\t\t\t\t<SectionContainer>\n\t\t\t\t\t{Object.entries(selections).map((item, index) => {\n\t\t\t\t\t\tconst [key, value] = item;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<MenuOpener key={index} onClick={() => this.openMenu(key as keyof Selection, value)}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<h3>{value.selected ? value.selected : key}</h3>\n\t\t\t\t\t\t\t\t\t<p>{key === '' ? `Choose your ${key}` : key}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</MenuOpener>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</SectionContainer>\n\t\t\t\t<YuiTitle hasFullLength={true}>\n\t\t\t\t\t<p>Statistics</p>\n\t\t\t\t\t<YuiTitleLine hasFullLength={true} />\n\t\t\t\t</YuiTitle>\n\t\t\t\t<SectionContainer>\n\t\t\t\t\t{selections.category.options.map((option) => {\n\t\t\t\t\t\tlet count = 0;\n\t\t\t\t\t\tlet percentage = 0;\n\t\t\t\t\t\tif ('categories' in this.props.content.userContent) {\n\t\t\t\t\t\t\tcount = this.props.content.userContent.categories[option].practiceCount;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ('practiceCount' in this.props.content.userContent) {\n\t\t\t\t\t\t\tconst divider = this.props.content.userContent.practiceCount || 1;\n\t\t\t\t\t\t\tpercentage = count / divider;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<InfoLine\n\t\t\t\t\t\t\t\tkey={option}\n\t\t\t\t\t\t\t\theading={option}\n\t\t\t\t\t\t\t\tdescription={`Your practice progress in ${option} category`}\n\t\t\t\t\t\t\t\tpercentage={percentage}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</SectionContainer>\n\t\t\t\t<ButtonContainer>\n\t\t\t\t\t<Button appearance={'button'} onClick={this.goToExercise.bind(this)}>\n\t\t\t\t\t\tSTART EXERCISE\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonContainer>\n\t\t\t\t{showExercise && (\n\t\t\t\t\t<PracticeModal\n\t\t\t\t\t\tlevelOfDifficulty={selections.levelOfDifficulty.selected}\n\t\t\t\t\t\tcategory={selections.category.selected}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</MainSection>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state: RootState) => {\n\treturn {\n\t\tcontent: state.content,\n\t\tmodal: state.modal\n\t};\n};\n\nconst mapActionsToProps = {\n\tshowModal,\n\tsetModalItems\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(PracticeSection);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Tag } from '../../../design/components/Tag';\nimport { spaces, colors } from '../../../design/fixedValues';\n\nconst OptionsContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\tborder-bottom: 2px solid ${colors.secondary};\n\tpadding: ${spaces.small} 0;\n`;\nconst customTagStyle = {\n\twidth: '40%'\n};\nclass ChooseLanguage extends React.Component<any, any> {\n\trender(): JSX.Element {\n\t\treturn (\n\t\t\t<OptionsContainer>\n\t\t\t\t<Tag as={'button'} appearance={'regular'} selected={false} name={'Czech'} style={customTagStyle}>\n\t\t\t\t\t{this.props.from}\n\t\t\t\t</Tag>\n\t\t\t\t<Tag onClick={this.props.handleSwitch} appearance={'regular'} selected={false} style={{ width: '20%' }}>\n\t\t\t\t\tSwitch\n\t\t\t\t</Tag>\n\t\t\t\t<Tag as={'button'} appearance={'regular'} selected={false} name={'English'} style={customTagStyle}>\n\t\t\t\t\t{this.props.to}\n\t\t\t\t</Tag>\n\t\t\t</OptionsContainer>\n\t\t);\n\t}\n}\n\nexport default ChooseLanguage;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { colors, measures, spaces } from '../../../design/fixedValues';\n\nconst PhraseContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nconst CustomTextArea = styled.textarea`\n\theight: ${measures.textAreaHeight};\n\tborder: none;\n\tresize: none;\n\toutline: none;\n\tpadding: ${spaces.small};\n\tfont-family: inherit;\n\tflex-grow: 1;\n\tcolor: inherit;\n\t&::placeholder {\n\t\topacity: 0.3;\n\t\tfont-weight: 300;\n\t}\n`;\n\nconst DisplayTranslation = styled.div`\n\theight: ${measures.textAreaHeight};\n\tpadding: ${spaces.small};\n\tflex-grow: 1;\n\tborder-top: 2px solid ${colors.secondary};\n`;\n\nclass EnterPhrase extends React.Component<any, any> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisFocused: false\n\t\t};\n\t}\n\n\thandleFocus() {\n\t\tif (this.props.isTypingDisabled) {\n\t\t\tconsole.error('Make sure to select type and category before translation', this.props.isTypingEnabled);\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({\n\t\t\tisFocused: true\n\t\t});\n\t\tthis.props.bringFocus(true);\n\t}\n\thandleBlur() {\n\t\tif (this.props.phrase.length === 0) {\n\t\t\tthis.setState({\n\t\t\t\tisFocused: false\n\t\t\t});\n\t\t}\n\t\tthis.props.bringFocus(false);\n\t}\n\thandleKeyInput(e: React.ChangeEvent<HTMLTextAreaElement>) {\n\t\tthis.props.handleChange(e.target.value);\n\t}\n\trender(): JSX.Element {\n\t\tconst { translatedPhrase, phrase, isTypingDisabled } = this.props;\n\t\tconst placeHolder = isTypingDisabled ? 'Please choose the options above first' : 'Enter your phrase';\n\t\treturn (\n\t\t\t<PhraseContainer>\n\t\t\t\t<CustomTextArea\n\t\t\t\t\tvalue={phrase}\n\t\t\t\t\tonFocus={() => this.handleFocus()}\n\t\t\t\t\tonBlur={() => this.handleBlur()}\n\t\t\t\t\tonChange={(e) => this.handleKeyInput(e)}\n\t\t\t\t\tplaceholder={placeHolder}\n\t\t\t\t\tdisabled={isTypingDisabled}\n\t\t\t\t/>\n\t\t\t\t{this.state.isFocused && <DisplayTranslation>{translatedPhrase}</DisplayTranslation>}\n\t\t\t</PhraseContainer>\n\t\t);\n\t}\n}\n\nexport default EnterPhrase;\n","import styled from 'styled-components';\nimport { colors, measures } from '../fixedValues';\n\nexport const Overlay = styled.div`\n\tposition: fixed;\n\twidth: 100vw;\n\theight: 100vh;\n\ttop: 0;\n\tleft: 0;\n\tbackground-color: ${colors.overlay};\n\topacity: ${measures.highOpacity};\n\tz-index: ${measures.zSecondLevel};\n\tpointer-events: none;\n\ttransition: all ease-in-out ${measures.transitionFast};\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport {\n\tinitialiseAddPhraseRequest,\n\tinitialiseAddCategoryRequest,\n\tPhraseRequestType,\n\tCategoryRequestType, CategoryRequestProps\n} from '../../../redux/firebase';\nimport { RootState } from '../../../redux/reducer';\nimport { ModalItemsType, ModalShowType, setModalItems, showModal, TriggerType ,closeModal} from '../../../redux/modal';\nimport {getUserData, ReducerState as ContentState, TGetUserData} from '../../../redux/content';\nimport { ReducerState as ModalState } from '../../../redux/modal';\nimport { Identity } from '../../../redux/identity';\n\nimport ChooseLanguage from './ChooseLanguage';\nimport EnterPhrase from './EnterPhrase';\n\nimport Modal from '../../Modal';\nimport { MenuOpener } from '../../../design/components/MenuOpener';\nimport { Button, ButtonContainer } from '../../../design/components/buttons';\nimport { SectionContainer, CategoryContainer, MainSection } from '../../../design/components/containers';\nimport { YuiTitle, YuiTitleLine } from '../../../design/components/YuiTitle';\nimport { Overlay } from '../../../design/components/Overlay';\n\nimport { debounce } from '../../../utils/tools';\nimport { LanguageLiterals, languages } from '../../../utils/fixedValues';\n\n//TYPES\ninterface Selection {\n\tvalue: string;\n\toptions: string[];\n}\n\nexport interface Selections {\n\ttype: Selection;\n\tcategory: Selection;\n}\n\ninterface VocabularyState {\n\tphrase: string;\n\ttranslatedPhrase: string;\n\ttargetLanguage: string;\n\tinEnglish: string;\n\tto: LanguageLiterals;\n\tfrom: LanguageLiterals;\n\tselections: Selections;\n\tisReadyToSubmit: boolean;\n\thasPhraseFocus: boolean;\n}\n\ninterface VocabularyProps {\n\tsetModalItems: ModalItemsType;\n\tinitialiseAddPhraseRequest: PhraseRequestType;\n\tinitialiseAddCategoryRequest: CategoryRequestType;\n\tshowModal: ModalShowType;\n\tcloseModal: ModalShowType;\n\tcontent: ContentState;\n\tmodal: ModalState<keyof Selections>;\n\tuser: Identity;\n\tgetUserData: TGetUserData;\n}\n\nclass VocabularySection extends React.Component<VocabularyProps, VocabularyState> {\n\tprivate readonly debounceTranslate: (debouncedFn: () => void) => void;\n\tprivate readonly categories: string[] = [''];\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tif ('categories' in this.props.content.userContent) {\n\t\t\tthis.categories = Object.keys(this.props.content.userContent.categories);\n\t\t}\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSwitch = this.handleSwitch.bind(this);\n\t\tthis.state = {\n\t\t\tphrase: '',\n\t\t\ttranslatedPhrase: '',\n\t\t\ttargetLanguage: languages.czech,\n\t\t\tinEnglish: '',\n\t\t\tto: 'czech',\n\t\t\tfrom: 'english',\n\t\t\tselections: {\n\t\t\t\ttype: { value: '', options: ['word', 'sentence'] },\n\t\t\t\tcategory: { value: '', options: this.categories }\n\t\t\t},\n\t\t\tisReadyToSubmit: false,\n\t\t\thasPhraseFocus: false\n\t\t};\n\t\tthis.debounceTranslate = debounce(this.setState, 1000);\n\t}\n\n\tcomponentDidUpdate(prevProps: Readonly<VocabularyProps>, prevState: Readonly<VocabularyState>) {\n\t\tlet previousContent = [];\n\t\tlet currentContent: any[] = [];\n\t\tif ('categories' in this.props.content.userContent) {\n\t\t\t//@ts-ignore\n\t\t\tpreviousContent = Object.keys(prevProps.content.userContent.categories);\n\t\t\tcurrentContent = Object.keys(this.props.content.userContent.categories);\n\t\t}\n\n\t\tif (previousContent.length !== currentContent.length) {\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\tselections: { ...prevState.selections, category: { ...prevState.selections.category, options: currentContent } }\n\t\t\t}));\n\t\t}\n\t}\n\n\tasync requestTranslation(phrase: string, targetLanguage: string) {\n\t\ttry {\n\t\t\tconst response = await fetch('/translate', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({ phrase, targetLanguage })\n\t\t\t});\n\n\t\t\tlet result;\n\t\t\tif (response.ok) {\n\t\t\t\tresult = await response.text();\n\t\t\t}\n\t\t\tif (result) {\n\t\t\t\tconst inEnglish = targetLanguage === languages['english'] ? result : phrase;\n\t\t\t\tthis.setState({\n\t\t\t\t\ttranslatedPhrase: result,\n\t\t\t\t\tinEnglish\n\t\t\t\t});\n\n\t\t\t\t// handle wrong translation\n\t\t\t\tif (phrase.split(' ').join('') === result.split(' ').join('')) {\n\t\t\t\t\tconsole.error('Both phrases are the exact same equal');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// handle isReadyToSubmit\n\t\t\t\tconst isReadyToSubmit =\n\t\t\t\t\tthis.state.phrase &&\n\t\t\t\t\tthis.state.inEnglish &&\n\t\t\t\t\tthis.state.targetLanguage &&\n\t\t\t\t\tthis.state.selections.type.value &&\n\t\t\t\t\tthis.state.selections.category.value;\n\t\t\t\tif (isReadyToSubmit) {\n\t\t\t\t\tconsole.log('Phrase is ready to submit');\n\t\t\t\t\tthis.setState({ isReadyToSubmit: true });\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err: any) {\n\t\t\tthrow new Error(err);\n\t\t}\n\t}\n\n\thandleChange(userInput: string) {\n\t\tif (userInput.trim().length === 0) {\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\ttranslatedPhrase: '',\n\t\t\t\tphrase: ''\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst targetLanguage = languages[this.state.to];\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tphrase: userInput\n\t\t});\n\n\t\tconst debouncedFn = () => {\n\t\t\tthis.requestTranslation(this.state.phrase, targetLanguage);\n\t\t};\n\t\tthis.debounceTranslate(debouncedFn);\n\t}\n\n\thandleSubmit() {\n\t\tif (!this.state.isReadyToSubmit) {\n\t\t\treturn;\n\t\t} else if (this.props.user.uid) {\n\t\t\tthis.props.initialiseAddPhraseRequest({\n\t\t\t\tuid: this.props.user.uid,\n\t\t\t\tphrase: this.state.phrase,\n\t\t\t\tlanguage: this.props.user.language,\n\t\t\t\tcategory: this.state.selections.category.value,\n\t\t\t\ttype: this.state.selections.type.value,\n\t\t\t\tinEnglish: this.state.inEnglish\n\t\t\t});\n\t\t}\n\t}\n\n\thandleSwitch() {\n\t\tif (this.state.translatedPhrase.length > 0) {\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\tphrase: prevState.translatedPhrase,\n\t\t\t\ttranslatedPhrase: prevState.phrase,\n\t\t\t\ttargetLanguage: prevState.from,\n\t\t\t\tto: prevState.from,\n\t\t\t\tfrom: prevState.to\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\ttargetLanguage: prevState.from,\n\t\t\t\tto: prevState.from,\n\t\t\t\tfrom: prevState.to\n\t\t\t}));\n\t\t}\n\t}\n\n\thandleSelection(selection: string) {\n\t\tthis.setState((prevState) => ({\n\t\t\t...prevState,\n\t\t\tselections: {\n\t\t\t\t...prevState.selections,\n\t\t\t\t[this.props.modal.triggeredBy]: {\n\t\t\t\t\t...prevState.selections[this.props.modal.triggeredBy as keyof Selections],\n\t\t\t\t\tvalue: selection\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\ttriggerDropdown(trigger: TriggerType) {\n\t\tconst options = this.state.selections[trigger as keyof Selections].options;\n\t\tthis.props.setModalItems(options, trigger);\n\t\tthis.props.showModal();\n\t}\n\n\thandleBringFocus(value: boolean) {\n\t\tthis.setState({ hasPhraseFocus: value });\n\t}\n\n\tasync handleModalComplete(ctx: CategoryRequestProps){\n\t\tthis.props.initialiseAddCategoryRequest(ctx)\n\t\tawait this.props.getUserData(this.props.user.uid);\n\t\tthis.props.closeModal()\n\t}\n\n\trender(): JSX.Element {\n\t\tconst { selections } = this.state;\n\t\tconst isTypingDisabled = !(selections.type.value && selections.category.value);\n\t\treturn (\n\t\t\t<MainSection>\n\t\t\t\t{(this.state.hasPhraseFocus || this.props.modal.isModalOpen) && <Overlay />}\n\t\t\t\t{this.props.modal.isModalOpen && (\n\t\t\t\t\t<Modal onCompleteEdit={this.handleModalComplete.bind(this)} onSelect={this.handleSelection.bind(this)} />\n\t\t\t\t)}\n\t\t\t\t<SectionContainer>\n\t\t\t\t\t<CategoryContainer>\n\t\t\t\t\t\t{Object.keys(selections).map((item, index) => (\n\t\t\t\t\t\t\t<MenuOpener key={index} onClick={() => this.triggerDropdown(item as keyof Selections)}>\n\t\t\t\t\t\t\t\t<h3>{item}</h3>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{selections[item as keyof Selections].value\n\t\t\t\t\t\t\t\t\t\t? selections[item as keyof Selections].value\n\t\t\t\t\t\t\t\t\t\t: `Choose ${item}`}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</MenuOpener>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</CategoryContainer>\n\t\t\t\t</SectionContainer>\n\n\t\t\t\t<SectionContainer isTopLevel={this.state.hasPhraseFocus}>\n\t\t\t\t\t<YuiTitle hasFullLength={true}>\n\t\t\t\t\t\t<p>New phrase</p>\n\t\t\t\t\t\t<YuiTitleLine hasFullLength={true} />\n\t\t\t\t\t</YuiTitle>\n\t\t\t\t\t<ChooseLanguage handleSwitch={this.handleSwitch} to={this.state.to} from={this.state.from} />\n\t\t\t\t\t<EnterPhrase\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\ttranslatedPhrase={this.state.translatedPhrase}\n\t\t\t\t\t\tphrase={this.state.phrase}\n\t\t\t\t\t\tisTypingDisabled={isTypingDisabled}\n\t\t\t\t\t\tbringFocus={this.handleBringFocus.bind(this)}\n\t\t\t\t\t/>\n\t\t\t\t</SectionContainer>\n\t\t\t\t<ButtonContainer>\n\t\t\t\t\t<Button appearance={'button'} onClick={this.handleSubmit.bind(this)}>\n\t\t\t\t\t\tADD PHRASE\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonContainer>\n\t\t\t</MainSection>\n\t\t);\n\t}\n}\n\nconst mapActionsToProps = {\n\tinitialiseAddPhraseRequest,\n\tinitialiseAddCategoryRequest,\n\tsetModalItems,\n\tshowModal,\n\tcloseModal,\n\tgetUserData\n};\nconst mapStateToProps = (state: RootState) => ({\n\tcontent: state.content,\n\tmodal: state.modal,\n\tuser: state.user\n});\nexport default connect(mapStateToProps, mapActionsToProps)(VocabularySection);\n","export function debounce(func: Function, timeout = 300) {\n  let timer: any;\n  return function (...args: any) {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      // @ts-ignore\n      func.apply(this, args);\n    }, timeout);\n  };\n}\n","import * as React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { PRACTICE_SECTION, VOCABULARY_SECTION } from '../../utils/constants';\nimport PracticeSection from './practice/PracticeSection';\nimport VocabularySection from './vocabulary/VocabularySection';\n\nclass NavigationsBoundary extends React.Component<any, any> {\n\trenderSection() {\n\t\tconst { sectionId } = this.props.match.params;\n\t\tswitch (sectionId) {\n\t\t\tcase PRACTICE_SECTION.toLowerCase():\n\t\t\t\treturn <PracticeSection />;\n\t\t\tcase VOCABULARY_SECTION.toLowerCase():\n\t\t\t\treturn <VocabularySection />;\n\t\t\tdefault:\n\t\t\t\treturn <PracticeSection />;\n\t\t}\n\t}\n\trender() {\n\t\treturn this.renderSection();\n\t}\n}\n\nexport default withRouter(NavigationsBoundary);\n","import * as React from 'react';\nimport { YuiTitle, YuiTitleLine } from '../../design/components/YuiTitle';\nimport { Navbar, NavbarActions } from '../../design/components/Navbar';\nimport {MainSection} from '../../design/components/containers';\nimport SectionBar from './NavigationBar';\nimport { Route } from 'react-router-dom';\nimport { HOME_PAGE_URL } from '../../utils/constants';\nimport SectionsBoundary from './NavigationsBoundary';\n\nexport default class Dashboard extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<MainSection>\n\t\t\t\t<Navbar>\n\t\t\t\t\t<h2>YuiLang</h2>\n\t\t\t\t\t<NavbarActions>\n\t\t\t\t\t\t<p style={{ margin: 0 }}>menu</p>\n\t\t\t\t\t</NavbarActions>\n\t\t\t\t</Navbar>\n\t\t\t\t<SectionBar />\n\t\t\t\t<Route path={`${HOME_PAGE_URL}/:sectionId`} component={SectionsBoundary} exact />\n\t\t\t\t<YuiTitle hasFullLength={true}>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tProduct of <span>Yuivae</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<YuiTitleLine hasFullLength={false} />\n\t\t\t\t</YuiTitle>\n\t\t\t</MainSection>\n\t\t);\n\t}\n}\n","import * as React from 'react';\nimport { Route, withRouter, Switch } from 'react-router-dom';\n\nimport { HOME_PAGE_URL } from '../utils/constants';\nimport Dashboard from '../components/DefaultLayout/Dashboard';\n\nclass DefaultLayout extends React.Component<any, any> {\n\trender() {\n\t\treturn (\n\t\t\t<Switch>\n\t\t\t\t<Route path={HOME_PAGE_URL} component={Dashboard} />\n\t\t\t</Switch>\n\t\t);\n\t}\n}\n\nexport default withRouter(DefaultLayout);\n","import styled from 'styled-components';\nimport {measures, spaces, colors} from \"../fixedValues\";\nimport {useState} from \"react\";\n\ninterface IWrapper{\n    hasFocus: boolean;\n}\n\nconst InputWrapper = styled.div<IWrapper>`\n  position: relative;\n  padding: ${spaces.medium};\n  display: flex;\n  flex-direction: column;\n  opacity: ${props => props.hasFocus ? 1: 0.6};\n`\n\nconst Label = styled.label`\n  font-size: ${measures.smallFontSize};\n`\n\nconst Input = styled.input`\n  padding: ${spaces.small};\n  border: none;\n  border-bottom: 1px solid ${colors.black};\n  outline: none;\n`\n\nconst UserInput = (props:any) => {\n    const [hasFocus,setHasFocus] = useState(false);\n    return <InputWrapper hasFocus={hasFocus}>\n        <Label  htmlFor={props.name}>{props.name}</Label>\n        <Input onFocus={()=> setHasFocus(true)} onBlur={()=> setHasFocus(false)} {...props}/>\n    </InputWrapper>\n}\n\nexport default UserInput;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { initialiseLogin } from '../redux/identity';\nimport UserInput from \"../design/components/Input\";\nimport {Button, ButtonContainer} from \"../design/components/buttons\";\nimport {SectionContainer} from \"../design/components/containers\";\nimport styled from 'styled-components';\nimport {spaces} from \"../design/fixedValues\";\nimport {YuiTitle, YuiTitleLine} from \"../design/components/YuiTitle\";\n\nconst StyledContainer = styled(SectionContainer)`\n\tpadding: ${spaces.large} ${spaces.small};\n\theight: 100%;\n\th1{\n\t\ttext-align: center;\n\t}\n`\nconst StyledTitle = styled(YuiTitle)`\n\tmargin-top: auto;\n`\ninterface LoginPageState {\n\temail: string;\n\tpassword: string;\n}\n\nclass LogInPage extends React.Component<any, LoginPageState> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t};\n\t}\n\n\thandleChange(e: React.ChangeEvent<HTMLInputElement>) {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\thandleSubmit(e: any) {\n\t\te.preventDefault();\n\t\tthis.props.initialiseLogin({ email: this.state.email, password: this.state.password });\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<StyledContainer>\n\t\t\t\t<form aria-labelledby={'login-form-title'} onSubmit={e => this.handleSubmit(e)}>\n\t\t\t\t\t<h1 id={'login-form-title'}>Login form</h1>\n\t\t\t\t\t<UserInput\n\t\t\t\t\t\ttype={'text'}\n\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\tonChange={(e:React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\n\t\t\t\t\t\tname={'email'}\n\t\t\t\t\t\taria-label={'email'}\n\t\t\t\t\t/>\n\t\t\t\t\t<UserInput\n\t\t\t\t\t\ttype={'password'}\n\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\tonChange={(e:React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\n\t\t\t\t\t\tname={'password'}\n\t\t\t\t\t\taria-label={'password'}\n\t\t\t\t\t/>\n\t\t\t\t\t<ButtonContainer>\n\t\t\t\t\t\t<Button appearance={'button'} type={'submit'}>Login</Button>\n\t\t\t\t\t</ButtonContainer>\n\t\t\t\t</form>\n\t\t\t\t<StyledTitle hasFullLength={true}>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tProduct of <span>Yuivae</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<YuiTitleLine hasFullLength={false} />\n\t\t\t\t</StyledTitle>\n\t\t\t</StyledContainer>\n\t\t);\n\t}\n}\n\nconst actionCreators = {\n\tinitialiseLogin\n};\nexport default connect(undefined, actionCreators)(LogInPage);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport UserInput from \"../design/components/Input\";\nimport {Button, ButtonContainer} from \"../design/components/buttons\";\nimport {YuiTitle, YuiTitleLine} from \"../design/components/YuiTitle\";\nimport styled from \"styled-components\";\nimport {SectionContainer} from \"../design/components/containers\";\nimport {spaces} from \"../design/fixedValues\";\nimport {initialiseSignup} from '../redux/signup';\n\nconst StyledContainer = styled(SectionContainer)`\n\tpadding: ${spaces.large} ${spaces.small};\n\theight: 100%;\n\th1{\n\t\ttext-align: center;\n\t}\n`\nconst StyledTitle = styled(YuiTitle)`\n\tmargin-top: auto;\n`\n\ninterface SignUpPageState {\n\temail: string;\n\tpassword: string;\n}\n\nclass SignUpPage extends React.Component<any, SignUpPageState> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\thandleChange(e: React.ChangeEvent<HTMLInputElement>) {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleSubmit(e: any) {\n\t\te.preventDefault();\n\t\tthis.props.initialiseSignup({ email: this.state.email, password: this.state.password });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<StyledContainer>\n\t\t\t\t<form aria-labelledby={'login-form-title'} onSubmit={e => this.handleSubmit(e)}>\n\t\t\t\t\t<h1 id={'login-form-title'}>Signup form</h1>\n\t\t\t\t\t<UserInput\n\t\t\t\t\t\ttype={'text'}\n\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\tonChange={(e:React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\n\t\t\t\t\t\tname={'email'}\n\t\t\t\t\t\taria-label={'email'}\n\t\t\t\t\t/>\n\t\t\t\t\t<UserInput\n\t\t\t\t\t\ttype={'password'}\n\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\tonChange={(e:React.ChangeEvent<HTMLInputElement>) => this.handleChange(e)}\n\t\t\t\t\t\tname={'password'}\n\t\t\t\t\t\taria-label={'password'}\n\t\t\t\t\t/>\n\t\t\t\t\t<ButtonContainer>\n\t\t\t\t\t\t<Button appearance={'button'} type={'submit'}>Signup</Button>\n\t\t\t\t\t</ButtonContainer>\n\t\t\t\t</form>\n\t\t\t\t<StyledTitle hasFullLength={true}>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tProduct of <span>Yuivae</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<YuiTitleLine hasFullLength={false} />\n\t\t\t\t</StyledTitle>\n\t\t\t</StyledContainer>\n\t\t);\n\t}\n}\n\nconst actionCreators = {\n\tinitialiseSignup\n};\nexport default connect(undefined, actionCreators)(SignUpPage);\n","import React from 'react';\n\nexport default class ErrorPage extends React.Component<any, any> {\n\trender() {\n\t\treturn <h1>You encountered an error {this.props.message && this.props.message}</h1>;\n\t}\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Switch, Route, Router as BrowserRouter,Redirect } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { ThemeProvider } from 'styled-components';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport AuthenticationBoundary from './components/AuthenticationBoundary';\n\nimport { GlobalStyle, theme } from './design/theme';\n\nimport DefaultLayout from './pages/DefaultLayout';\nimport { LOGIN_PAGE_URL, SIGNUP_PAGE_URL } from './utils/constants';\nimport LogInPage from './pages/LogInPage';\nimport SignUpPage from './pages/SignUpPage';\nimport ErrorPage from './pages/ErrorPage';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter history={history}>\n\t\t\t<GlobalStyle />\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<AuthenticationBoundary>\n\t\t\t\t\t<DefaultLayout />\n\t\t\t\t</AuthenticationBoundary>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path={'/'} render={()=> <Redirect to={LOGIN_PAGE_URL} />} exact/>\n\t\t\t\t\t<Route path={'/error'} component={ErrorPage} />\n\t\t\t\t\t<Route path={LOGIN_PAGE_URL} component={LogInPage} exact />\n\t\t\t\t\t<Route path={SIGNUP_PAGE_URL} component={SignUpPage} exact />\n\t\t\t\t</Switch>\n\t\t\t</ThemeProvider>\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}